// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
// testregistry.proto -- specifying structure of a list of tests
// in featureprofiles

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: testregistry.proto

package testregistry_go_proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRegistry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name -- the human readable name of this TestSuite
	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Test []*Test `protobuf:"bytes,2,rep,name=test,proto3" json:"test,omitempty"`
}

func (x *TestRegistry) Reset() {
	*x = TestRegistry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testregistry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRegistry) ProtoMessage() {}

func (x *TestRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_testregistry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRegistry.ProtoReflect.Descriptor instead.
func (*TestRegistry) Descriptor() ([]byte, []int) {
	return file_testregistry_proto_rawDescGZIP(), []int{0}
}

func (x *TestRegistry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestRegistry) GetTest() []*Test {
	if x != nil {
		return x.Test
	}
	return nil
}

// Test specifies resources for a single functional test that applies to a
// Feature. It
type Test struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id -- Test ID, required, must be unique, must match the regex:
	//
	//	[A-Z][A-Z]+\-[0-9]+(\.[0-9]+)?
	//	Test ID should match the rundata.TestPlanID of the linked exec.
	//	For example: AA-1.1
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// version -- should be incremented each time any changes are made to the
	//
	//	Test message instance for a given Test ID.
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// description -- should be a human readable common name for the Test
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// readme -- must be a URL, should be a link to the human readable
	//
	//	readme.md or other documentation describing the test
	Readme []string `protobuf:"bytes,4,rep,name=readme,proto3" json:"readme,omitempty"`
	// exec -- must be a URL, may be a link to google3 code, should be a
	//
	//	link to an ondatra test in the public repo location
	Exec string `protobuf:"bytes,5,opt,name=exec,proto3" json:"exec,omitempty"`
}

func (x *Test) Reset() {
	*x = Test{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testregistry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_testregistry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_testregistry_proto_rawDescGZIP(), []int{1}
}

func (x *Test) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Test) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Test) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Test) GetReadme() []string {
	if x != nil {
		return x.Readme
	}
	return nil
}

func (x *Test) GetExec() string {
	if x != nil {
		return x.Exec
	}
	return ""
}

var File_testregistry_proto protoreflect.FileDescriptor

var file_testregistry_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x65, 0x0a,
	0x0c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x78, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testregistry_proto_rawDescOnce sync.Once
	file_testregistry_proto_rawDescData = file_testregistry_proto_rawDesc
)

func file_testregistry_proto_rawDescGZIP() []byte {
	file_testregistry_proto_rawDescOnce.Do(func() {
		file_testregistry_proto_rawDescData = protoimpl.X.CompressGZIP(file_testregistry_proto_rawDescData)
	})
	return file_testregistry_proto_rawDescData
}

var file_testregistry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_testregistry_proto_goTypes = []interface{}{
	(*TestRegistry)(nil), // 0: openconfig.featureprofiles.testregistry.TestRegistry
	(*Test)(nil),         // 1: openconfig.featureprofiles.testregistry.Test
}
var file_testregistry_proto_depIdxs = []int32{
	1, // 0: openconfig.featureprofiles.testregistry.TestRegistry.test:type_name -> openconfig.featureprofiles.testregistry.Test
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_testregistry_proto_init() }
func file_testregistry_proto_init() {
	if File_testregistry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testregistry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRegistry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testregistry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testregistry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testregistry_proto_goTypes,
		DependencyIndexes: file_testregistry_proto_depIdxs,
		MessageInfos:      file_testregistry_proto_msgTypes,
	}.Build()
	File_testregistry_proto = out.File
	file_testregistry_proto_rawDesc = nil
	file_testregistry_proto_goTypes = nil
	file_testregistry_proto_depIdxs = nil
}
