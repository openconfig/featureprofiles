// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package openconfig.testing;

import "github.com/openconfig/ondatra/proto/testbed.proto";

// Metadata about a Feature Profiles test.
message Metadata {
  // UUID of the test.
  string uuid = 1;
  // ID of the test in the test plan.
  string plan_id = 2;
  // One-line description of the test.
  string description = 3;

  // Types of testbeds on which the test may run.
  enum Testbed {
    TESTBED_UNSPECIFIED = 0;
    TESTBED_DUT = 1;
    TESTBED_DUT_DUT_4LINKS = 2;
    TESTBED_DUT_ATE_2LINKS = 3;
    TESTBED_DUT_ATE_4LINKS = 4;
    TESTBED_DUT_ATE_9LINKS = 5;
  }
  // Testbed on which the test is intended to run.
  Testbed testbed = 4;

  message Platform {
    // Vendor of the device.
    ondatra.Device.Vendor vendor = 1;
    // Hardware models of the device.
    repeated string hardware_model = 2;
  }

  message Deviations {
    // Device does not support interface/ipv4/enabled,
    // so suppress configuring this leaf.
    bool ipv4_missing_enabled = 1;
    // Device does not support fragmentation bit for traceroute.
    bool traceroute_fragmentation = 2;
    // Device only support UDP as l4 protocol for traceroute.
    bool traceroute_l4_protocol_udp = 3;
    // Device does not support bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes/received-pre-policy.
    bool prepolicy_received_routes = 4;
    // Expected ucmp traffic tolerance. Minimum value is 0.2, anything less
    // will be coerced to 0.2.
    double hierarchical_weight_resolution_tolerance = 5;
  }

  message PlatformExceptions {
    Platform platform = 1;
    Deviations deviations = 2;
  }

  repeated PlatformExceptions platform_exceptions = 5;
}
