// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package openconfig.testing;

import "github.com/openconfig/ondatra/proto/testbed.proto";

// Metadata about a Feature Profiles test.
message Metadata {
  // UUID of the test.
  string uuid = 1;
  // ID of the test in the test plan.
  string plan_id = 2;
  // One-line description of the test.
  string description = 3;

  // Types of testbeds on which the test may run.
  enum Testbed {
    TESTBED_UNSPECIFIED = 0;
    TESTBED_DUT = 1;
    TESTBED_DUT_DUT_4LINKS = 2;
    TESTBED_DUT_ATE_2LINKS = 3;
    TESTBED_DUT_ATE_4LINKS = 4;
    TESTBED_DUT_ATE_9LINKS_LAG = 5;
    TESTBED_DUT_DUT_ATE_2LINKS = 6;
    TESTBED_DUT_ATE_8LINKS = 7;
  }
  // Testbed on which the test is intended to run.
  Testbed testbed = 4;

  message Platform {
    // Vendor of the device.
    ondatra.Device.Vendor vendor = 1;
    // Regex for hardware model of the device.
    // The empty string will match any hardware model.
    string hardware_model_regex = 3;
    // Regex for software version of the device.
    // The empty string will match any software version.
    string software_version_regex = 4;
    // Reserved field numbers and identifiers.
    reserved 2;
    reserved "hardware_model";
  }

  message Deviations {
    // Device does not support interface/ipv4/enabled,
    // so suppress configuring this leaf.
    bool ipv4_missing_enabled = 1;
    // Device does not support fragmentation bit for traceroute.
    bool traceroute_fragmentation = 2;
    // Device only support UDP as l4 protocol for traceroute.
    bool traceroute_l4_protocol_udp = 3;
    // Device does not support
    // bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes/received-pre-policy.
    bool prepolicy_received_routes = 4;
    // Expected ucmp traffic tolerance. Minimum value is 0.2, anything less
    // will be coerced to 0.2.
    // Juniper: partnerissuetracker.corp.google.com/282234301
    // Cisco: partnerissuetracker.corp.google.com/279477633
    double hierarchical_weight_resolution_tolerance = 5;
    // Device skip isis multi-topology check if value is true.
    bool isis_multi_topology_unsupported = 6;
    // Disable isis level1 under interface mode on the device if value is true.
    bool isis_interface_level1_disable_required = 7;
    // Set isis af ipv6 single topology on the device if value is true.
    bool isis_single_topology_required = 8;
    // Don't set isis instance enable flag on the device if value is true.
    bool isis_instance_enabled_required = 10;
    // Set and validate isis interface address family enable on the device if
    // value is true.
    bool missing_isis_interface_afi_safi_enable = 11;
    // Don't set isis global authentication-check on the device if value is
    // true.
    bool isis_global_authentication_not_required = 12;
    // Configure CSNP, LSP and PSNP under level authentication explicitly if
    // value is true.
    bool isis_explicit_level_authentication_config = 13;
    // Device skip isis restart-suppress check if value is true.
    bool isis_restart_suppress_unsupported = 14;
    // Device does not support interface/ipv4(6)/neighbor.
    // Cisco: partnerissuetracker.corp.google.com/268243828
    bool ip_neighbor_missing = 15;
    // Device requires separate reboot to activate OS.
    bool osactivate_noreboot = 16;
    // Device requires OS installation on standby RP as well as active RP.
    bool osinstall_for_standby_rp = 17;
    // Set this flag for LLDP interface config to override the global config.
    bool lldp_interface_config_override_global = 18;
    // Skip check for
    // bgp/neighbors/neighbor/state/messages/received/last-notification-error-code
    // leaf missing case.
    bool missing_bgp_last_notification_error_code = 21;
    // Device does not support interface-ref configuration when applying
    // features to interface.
    bool interface_ref_config_unsupported = 22;
    // Device does not support these state paths.
    // Juniper: partnerissuetracker.corp.google.com/279470921
    bool state_path_unsupported = 23;
    // Device requires Ipv6 to be enabled on interface for gRIBI NH programmed
    // with destination mac address.
    // Juniper: partnerissuetracker.corp.google.com/267642089
    bool ipv6_enable_for_gribi_nh_dmac = 24;
    // Device requires additional config for ECN.
    // Juniper: partnerissuetracker.corp.google.com/277657269
    bool ecn_profile_required_definition = 25;
    // Set true for device that does not support interface ipv6 discarded packet
    // statistics.
    // Juniper: partnerissuetracker.corp.google.com/277762075
    bool ipv6_discarded_pkts_unsupported = 26;
    // Device does not support drop and weight leaves under queue management
    // profile.
    // Juniper: partnerissuetracker.corp.google.com/279471405
    bool drop_weight_leaves_unsupported = 27;
    // Config pushed through origin CLI takes precedence over config pushed
    // through origin OC.
    bool cli_takes_precedence_over_oc = 29;
    // Device does not support weight above 100.
    // Juniper: partnerissuetracker.corp.google.com/277066804
    bool scheduler_input_weight_limit = 30;
    // Device does not support id leaf for SwitchChip components.
    // Juniper: partnerissuetracker.corp.google.com/277134501
    bool switch_chip_id_unsupported = 31;
    // Device does not support backplane-facing-capacity leaves for some of the
    // components.
    // Juniper: partnerissuetracker.corp.google.com/277134501
    bool backplane_facing_capacity_unsupported = 32;
    // Device only supports querying counters from the state container, not from
    // individual counter leaves.
    bool interface_counters_from_container = 33;
    // Use this deviation when the device does not support a mix of tagged and
    // untagged subinterfaces.
    bool no_mix_of_tagged_and_untagged_subinterfaces = 34;
    // Device does not report P4RT node names in the component hierarchy.
    bool explicit_p4rt_node_component = 35;
    // Configure ACLs using vendor native model specifically for RT-1.4.
    bool use_vendor_native_acl_config = 36;
    // Device does not support reporting software version according to the
    // requirements in gNMI-1.10.
    bool sw_version_unsupported = 37;
    // Device requires explicit interface ref configuration when applying
    // features to interface.
    bool explicit_interface_ref_definition = 38;
    // Device does not support telemetry path /components/component/storage.
    // Juniper: partnerissuetracker.corp.google.com/284239001
    bool storage_component_unsupported = 39;
    // Device requires gribi-protocol to be enabled under network-instance.
    bool explicit_gribi_under_network_instance = 40;
    // Device requires port-speed to be set because its default value may not be
    // usable.
    bool explicit_port_speed = 41;
    // Device requires explicit attachment of an interface or subinterface to
    // the default network instance.
    // Nokia: partnerissuetracker.corp.google.com/260928639
    bool explicit_interface_in_default_vrf = 42;
    // Skip checking QOS Dropped octets stats for interface.
    bool qos_dropped_octets = 43;
    // Device is missing subinterface packet counters for IPv4/IPv6.
    bool subinterface_packet_counters_missing = 44;
    // Connect-retry is not supported
    // /bgp/neighbors/neighbor/timers/config/connect-retry.
    bool connect_retry = 45;
    // Device does not support programming a gribi flow with a next-hop entry of
    // mac-address only.
    bool gribi_mac_override_with_static_arp = 46;
    // Set true for device that does not support route-policy under AFI/SAFI.
    bool route_policy_under_afi_unsupported = 47;
    // Device does not support using gNOI to reboot the Fabric Component.
    bool gnoi_fabric_component_reboot_unsupported = 48;
    // Device does not support the ntp nondefault vrf case.
    bool ntp_non_default_vrf_unsupported = 49;
    // Device does not support setting the L2 MTU. OpenConfig allows a device to
    // enforce that L2 MTU, which has a default value of 1514, must be set to a
    // higher value than L3 MTU.
    // Arista: partnerissuetracker.corp.google.com/243445300
    bool omit_l2_mtu = 50;
    // Skip power admin for controller card
    bool skip_controller_card_power_admin = 51;
    // Device requires the banner to have a delimiter character.
    string banner_delimiter = 60;
    // Allowed tolerance for BGP traffic flow while comparing for pass or fail
    // condition.
    int32 bgp_tolerance_value = 61;
    // Device requires additional time to complete post delete link
    // qualification cleanup.
    bool link_qual_wait_after_delete_required = 62;
    // The response of gNOI reboot status is a single value (not a list), so the
    // device requires explict component path to account for a situation when
    // there is more than one active reboot requests.
    // Arista: partnerissuetracker.corp.google.com/245550570
    bool gnoi_status_empty_subcomponent = 63;
    // Device requiries explicit deletion of network-instance table.
    bool network_instance_table_deletion_required = 64;
    // Device requires a BGP session reset to utilize a new MD5 key.
    bool bgp_md5_requires_reset = 65;
    // Devices do not count dequeued and deleted packets as drops.
    // Arista: partnerissuetracker.corp.google.com/275384848
    bool dequeue_delete_not_counted_as_drops = 66;
    // Device only supports RIB ack, so tests that normally expect FIB_ACK will
    // allow just RIB_ACK.
    bool gribi_riback_only = 67;
    // Device requires that aggregate Port-Channel and its members be defined in
    // a single gNMI Update transaction at /interfaces; otherwise lag-type will
    // be dropped, and no member can be added to the aggregate.
    // Arista: partnerissuetracker.corp.google.com/201574574
    bool aggregate_atomic_update = 68;
    // Device returns no value for some OpenConfig paths if the operational
    // value equals the default.
    // Arista: partnerissuetracker.corp.google.com/258286131
    bool missing_value_for_defaults = 69;
    // The name used for the static routing protocol.  The default name in
    // OpenConfig is \"DEFAULT\" but some devices use other names.
    // Arista: partnerissuetracker.corp.google.com/269699737
    string static_protocol_name = 70;
    // Device currently uses component name instead of a full openconfig path,
    // so suppress creating a full oc compliant path for subcomponent.
    bool gnoi_subcomponent_path = 71;
    // When configuring interface, config VRF prior config IP address.
    // Arista: partnerissuetracker.corp.google.com/261958938
    bool interface_config_vrf_before_address = 72;
    // Device requires using the deprecated openconfig-vlan:vlan/config/vlan-id
    // or openconfig-vlan:vlan/state/vlan-id leaves.
    // Arista: partnerissuetracker.corp.google.com/261085885
    bool deprecated_vlan_id = 73;
    // Device requires gRIBI MAC Override using Static ARP + Static Route
    // Arista: partnerissuetracker.corp.google.com/234635355
    bool gribi_mac_override_static_arp_static_route = 74;
    // Device requires interface enabled leaf booleans to be explicitly set to
    // true.
    bool interface_enabled = 75;
    // Skip checking QOS octet stats for interface.
    // Arista: partnerissuetracker.corp.google.com/283541442
    bool qos_octets = 76;
    // Device CPU components do not map to a FRU parent component in the OC
    // tree.
    bool cpu_missing_ancestor = 77;
    // Device needs subinterface 0 to be routed for non-zero sub-interfaces.
    bool require_routed_subinterface_0 = 78;
    // Device does not report last-switchover-reason as USER_INITIATED for
    // gNOI.SwitchControlProcessor.
    bool gnoi_switchover_reason_missing_user_initiated = 79;
    // The name used for the default network instance for VRF.  The default name
    // in OpenConfig is \"DEFAULT\" but some legacy devices still use
    // \"default\".
    string default_network_instance = 80;
    // Device allows unset Election ID to be primary.
    bool p4rt_unsetelectionid_primary_allowed = 81;
    // Device sets ALREADY_EXISTS status code for all backup client responses.
    bool bkup_arbitration_resp_code = 82;
    // Device requires IPOverIP decapsulation for backup NHG without interfaces.
    bool backup_nhg_requires_vrf_with_decap = 83;
    // Devices don't support configuring ISIS /afi-safi/af/config container.
    bool isis_interface_afi_unsupported = 85;
    // Devices don't support modify table entry operation in P4 Runtime.
    bool p4rt_modify_table_entry_unsupported = 86;
    // Parent of OS component is of type SUPERVISOR or LINECARD.
    bool os_component_parent_is_supervisor_or_linecard = 87;
    // Parent of OS component is of type CHASSIS.
    bool os_component_parent_is_chassis = 88;
    // Devices require configuring the same ISIS Metrics for Level 1 when
    // configuring Level 2 Metrics.
    bool isis_require_same_l1_metric_with_l2_metric = 91;
    // Devices require configuring the same OSPF setMetric when BGP
    // SetMED is configured.
    bool bgp_set_med_requires_equal_ospf_set_metric = 92;
    // Devices require configuring subinterface with tagged vlan for p4rt
    // packet in.
    bool p4rt_gdp_requires_dot1q_subinterface = 93;
    // ATE port link state operations are a no-op in KNE/virtualized environments.
    bool ate_port_link_state_operations_unsupported = 94;
    // Creates a user and assigns role/rbac to said user via native model.
    bool set_native_user = 95;
    // Devices require configuring lspRefreshInterval ISIS timer when
    // lspLifetimeInterval is configured.
    // Arista: partnerissuetracker.corp.google.com/293667850
    bool isis_lsp_lifetime_interval_requires_lsp_refresh_interval = 96;
    // Device does not support telemetry path
    // /components/component/cpu/utilization/state/avg for linecards' CPU card.
    bool linecard_cpu_utilization_unsupported = 98;
    // Device does not support consistent component names for GNOI and GNMI.
    bool consistent_component_names_unsupported = 99;
    // Device does not support telemetry path
    // /components/component/cpu/utilization/state/avg for controller cards'
    // CPU card.
    bool controller_card_cpu_utilization_unsupported = 100;
    // Device does not support counter for fabric block lost packets.
    bool fabric_drop_counter_unsupported = 101;
    // Device does not support memory utilization related leaves for linecard components.
    bool linecard_memory_utilization_unsupported = 102;
    // Device does not support telemetry path
    // /qos/interfaces/interface/input/virtual-output-queues/voq-interface/queues/queue/state/dropped-pkts.
    bool qos_voq_drop_counter_unsupported = 103;
    // ATE IPv6 flow label unsupported in KNE/virtualized environments.
    bool ate_ipv6_flow_label_unsupported = 104;
    // Devices do not support configuring isis csnp-interval timer.
    // Arista: partnerissuetracker.corp.google.com/299283216
    bool isis_timers_csnp_interval_unsupported = 105;
    // Devices do not support telemetry for isis counter:
    // manual-address-drop-from-areas.
    // Arista: partnerissuetracker.corp.google.com/299285115
    bool isis_counter_manual_address_drop_from_areas_unsupported = 106;
    // Devices do not support telemetry for isis counter: part-changes.
    // Arista: partnerissuetracker.corp.google.com/317086576
    bool isis_counter_part_changes_unsupported = 107;
    // Devices do not support threshold container under /components/component/transceiver.
    bool transceiver_thresholds_unsupported = 108;
    // Update interface loopback mode using raw gnmi API due to server version.
    bool interface_loopback_mode_raw_gnmi = 109;
    // Devices do not support showing negotiated tcp mss value in bgp tcp mss telemetry.
    // Juniper: b/300499125
    bool skip_tcp_negotiated_mss_check = 110;
    // Devices don't support ISIS-Lsp metadata paths: checksum, sequence-number,
    // remaining-lifetime.
    bool isis_lsp_metadata_leafs_unsupported = 111;
    // QOS queue requires configuration with queue-id
    bool qos_queue_requires_id = 112;
    // Devices do not support forwarding for fib failed routes.
    bool skip_fib_failed_traffic_forwarding_check = 113;
    // QOS requires buffer-allocation-profile configuration
    bool qos_buffer_allocation_config_required = 114;
    // Devices do not support configuring ExtendedNextHopEncoding at the BGP global level.
    // Arista: https://partnerissuetracker.corp.google.com/issues/203683090
    bool bgp_global_extended_next_hop_encoding_unsupported = 115;
    // OC unsupported for BGP LLGR disable.
    // Juniper: b/303479602
    bool bgp_llgr_oc_undefined = 116;
    // Device does not support tunnel interfaces state paths
    // Juniper: partnerissuetracker.corp.google.com/300111031
    bool tunnel_state_path_unsupported = 117;
    // Device does not support tunnel interfaces source and destination address config paths
    // Juniper: partnerissuetracker.corp.google.com/300111031
    bool tunnel_config_path_unsupported = 118;
    // Cisco: Device does not support same minimun and maximum threshold value in QOS ECN config.
    bool ecn_same_min_max_threshold_unsupported = 119;
    // Cisco: QOS requires scheduler configuration.
    bool qos_scheduler_config_required = 120;
    // Cisco: Device does not support set weight config under QOS ECN configuration.
    bool qos_set_weight_config_unsupported = 121;
    // Cisco: Device does not support these get state path.
    bool qos_get_state_path_unsupported = 122;
    // Devices requires enabled leaf under isis level
    // Juniper: partnerissuetracker.corp.google.com/302661486
    bool isis_level_enabled = 123;
    // Devices which require to use interface-id format of interface name + .subinterface index with Interface-ref container
    bool interface_ref_interface_id_format = 124;
    // Devices does not support member link loopback
    // Juniper: b/307763669
    bool member_link_loopback_unsupported = 125;
    // Device does not support PLQ operational status check on interface
    // Juniper: b/308990185
    bool skip_plq_interface_oper_status_check = 126;
    // Device set received prefix limits explicitly under prefix-limit-received rather than
    // "prefix-limit"
    bool bgp_explicit_prefix_limit_received = 127;
    // Device does not configure BGP maximum routes correctly when max-prefixes
    // leaf is configured
    bool bgp_missing_oc_max_prefixes_configuration = 128;
    // Devices which needs to skip checking AFI-SAFI disable.
    // Juniper: b/310698466
    bool skip_bgp_session_check_without_afisafi = 129;
    // Devices that have separate naming conventions for hardware resource name
    // in /system/ tree and /components/ tree.
    bool mismatched_hardware_resource_name_in_component = 130;
    // Devices that don't support telemetry for hardware resources before
    // used-threshold-upper configuration.
    bool missing_hardware_resource_telemetry_before_config = 131;
    // Device does not support reboot status check on subcomponents.
    bool gnoi_subcomponent_reboot_status_unsupported = 132;
    // Devices exports routes from all protocols to BGP if the export-policy is ACCEPT
    // Juniper: b/308970803
    bool skip_non_bgp_route_export_check = 133;
    // Devices do not support path
    // /network-instances/network-instance/protocols/protocol/isis/levels/level/state/metric-style
    // Arista: https://partnerissuetracker.corp.google.com/issues/317064733
    bool isis_metric_style_telemetry_unsupported = 134;
    // Devices do not support configuring Interface-ref under Static-Route Next-Hop
    bool static_route_next_hop_interface_ref_unsupported = 135;
    // Devices which does not support nexthop index state
    // Juniper: b/304729237
    bool skip_static_nexthop_check = 136;
    // Devices which needs to enable leaf specific flag
    // Juniper: b/319202763
    bool enable_flowctrl_flag = 137;
    // Device doesn't support router advertisement enable and mode config
    // Juniper: b/316173974 
    bool ipv6_router_advertisement_config_unsupported = 138;
    // Devices does not support setting prefix limit exceeded flag.
    // Juniper : b/317181227
    bool prefix_limit_exceeded_telemetry_unsupported = 139;
    // Skip setting allow-multiple-as while configuring eBGP
    // Arista: partnerissuetracker.corp.google.com/issues/317422300
    bool skip_setting_allow_multiple_as = 140;
    //Skip tests with decap encap vrf as PBF action
    // Nokia: partnerissuetracker.corp.google.com/issues/323251581
     bool skip_pbf_with_decap_encap_vrf = 141;
    // Devices which does not support copying TTL.
    // Juniper: b/307258544
    bool ttl_copy_unsupported = 142;
    // Devices does not support mixed prefix length in gribi.
    // Juniper: b/307824407
    bool gribi_decap_mixed_plen_unsupported = 143;
    // Skip setting isis-actions set-level while configuring routing-policy statement action
    bool skip_isis_set_level = 144;
    // Skip setting isis-actions set-metric-style-type while configuring routing-policy statement action
    bool skip_isis_set_metric_style_type = 145;
    // Skip setting match-prefix-set match-set-options while configuring routing-policy statement condition
    bool skip_set_rp_match_set_options = 146;
    // Skip setting disable-metric-propagation while configuring table-connection
    bool skip_setting_disable_metric_propagation = 147;

    // Reserved field numbers and identifiers.
    reserved 84, 9, 28, 20, 90, 97, 55, 89, 19;
  }

  message PlatformExceptions {
    Platform platform = 1;
    Deviations deviations = 2;
  }

  // The `platform` field for each `platform_exceptions` should be mutually
  // exclusive. Duplicate matches will result in a test failure.
  repeated PlatformExceptions platform_exceptions = 5;

  enum Tags {
    TAGS_UNSPECIFIED = 0;
    TAGS_AGGREGATION = 1;
    TAGS_DATACENTER_EDGE = 2;
    TAGS_EDGE = 3;
    TAGS_TRANSIT = 4;
  }

  // The `tags` used to identify the area(s) testcase applies to. An empty tag
  // is the default implying it applies to all areas.
  repeated Tags tags = 6;
}

